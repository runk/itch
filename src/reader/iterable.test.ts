import fs from 'fs';
import path from 'path';
import createIterator from './iterable';

let reader: IterableIterator<Buffer>;
let fd: number;

beforeEach(() => {
  fd = fs.openSync(path.resolve(__dirname, '../../test/locate-13-10k.bin'), 'r');
  reader = createIterator(fd);
});
afterEach((done) => fs.close(fd, done));

const expected = [
  "52000d00000a37d4d0d3094141504c20202020514e000000644e435a20504e4e314e000000004e",
  "48000d00000a37eaed11924141504c20202020542020202020",
  "59000d00000a37eaed14b44141504c2020202030",
  "4c000d00000a3a6780f14f4753434f4141504c20202020594e41",
  "4c000d00000a3a68a4d96d494e544c4141504c20202020594e41",
  "4c000d00000a3a6a560eb350554d414141504c20202020594e41",
  "4c000d00000a3a6a71e779584757444141504c20202020594e41",
  "4c000d00000a3a6d841ccb5248434f4141504c20202020594e41",
  "4c000d00000a3a6fb0cddc4d5a484f4141504c20202020594e41",
  "4c000d00000a3a7061b0ee4c45484d4141504c20202020594e41",
  "4c000d00000a3a73734d054e41544c4141504c20202020594e41",
  "4c000d00000a3a75a065274b4559424141504c20202020594e41",
  "4c000d00000a3a81aa5bad4c4545524141504c20202020594e41",
  "4c000d00000a3a84027b1f4e4954454141504c20202020594e41",
  "4c000d00000a3a86ed8c3c52414a414141504c20202020594e41",
  "4c000d00000a3a87620e31575345414141504c20202020594e41",
  "4c000d00000a3a90ac3cfb535458474141504c20202020594e41",
  "4c000d00000a3a9164c33c535546494141504c20202020594e41",
  "4c000d00000a3a9181ad5b424d4f434141504c20202020594e41",
  "4c000d00000a3a926a1b2645544d4d4141504c20202020594e41",
  "4c000d00000a3a940e1e09494d43434141504c20202020594e41",
  "4c000d00000a3a94af76604a4546464141504c20202020594e41",
  "4c000d00000a3a9571d6934d41584d4141504c20202020594e41",
  "4c000d00000a3a96a9529e434f574e4141504c20202020594e41",
  "4c000d00000a3a9e09836c564952544141504c20202020594e41",
  "4c000d00000a3aa37a694d43414e544141504c20202020594e41",
  "4c000d00000a3aa60fe1cc4e4545444141504c20202020594e41",
  "4c000d00000a3aa7a349054a504d534141504c20202020594e41",
  "4c000d00000a3aa8a7e97f4a5353464141504c20202020594e41",
  "4c000d00000a3aaeafc349434452474141504c20202020594e41",
  "4c000d00000a3ab0f2c45f534741534141504c20202020594e41",
  "4c000d00000a3ab16864af5350484e4141504c20202020594e41",
  "4c000d00000a3ab2391b4c414558474141504c20202020594e41",
  "4c000d00000a3abc04edfd4d53434f4141504c20202020594e41",
  "4c000d00000a3abc29198b574142524141504c20202020594e41",
  "4c000d00000a3abf0657e44754534d4141504c20202020594e41",
  "4c000d00000a3ac18bd3ef4f484f534141504c20202020594e41",
  "4c000d00000a3ac2a15478534f484f4141504c20202020594e41",
  "4c000d00000a3ac2c55930574544424141504c20202020594e41",
  "4c000d00000a3ac529653e4354444c4141504c20202020594e41",
  "4c000d00000a3ac68b3657564552544141504c20202020594e41",
  "4c000d00000a3ac68f3bad5453534d4141504c20202020594e41",
  "4c000d00000a3ace778d08504950524141504c20202020594e41",
  "4c000d00000a3ad09730ba435354494141504c20202020594e41",
  "4c000d00000a3ad2661e2b5354464c4141504c20202020594e41",
  "4c000d00000a3ad3dbb2be5242434d4141504c20202020594e41",
  "4c000d00000a3ad665e2df57424c524141504c20202020594e41",
  "4c000d00000a3adb3486784144414d4141504c20202020594e41",
  "4c000d00000a3adb86c77f554253534141504c20202020594e41",
  "4c000d00000a3adf947587424152444141504c20202020594e41",
  "4c000d00000a3adfb27206444144414141504c20202020594e41",
];

test('supports `for .. of` syntax', () => {
  let i = 0;
  const msgs = [];
  for (let msg of reader) {
    const type = String.fromCharCode(msg[0]);
    expect(['H', 'R', 'Y', 'L']).toContain(type);
    msgs.push(msg.toString('hex'));

    if (i++ >= 50) {
      break;
    }
  }
  expect(msgs).toEqual(expected);
});

test('supports `next()` iteration style', () => {
  const msgs = [];
  for (let i = 0; i <= 50; i++) {
    const msg = reader.next();
    const type = String.fromCharCode(msg.value[0]);
    expect(['H', 'R', 'Y', 'L']).toContain(type);
    expect(msg.done).toBe(false);
    msgs.push(msg.value.toString('hex'));
  }
  expect(msgs).toEqual(expected);
});
